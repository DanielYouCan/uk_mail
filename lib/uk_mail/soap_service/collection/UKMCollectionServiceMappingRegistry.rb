# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.3)
require_relative 'UKMCollectionService.rb'
require 'soap/mapping'

module UKMail; module SoapService; module Collection

module UKMCollectionServiceMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsDataContracts = "http://www.UKMail.com/Services/Contracts/DataContracts"
  NsServiceContracts = "http://www.UKMail.com/Services/Contracts/ServiceContracts"
  NsUKMWebAPICommonWebResponses = "http://schemas.datacontract.org/2004/07/UKMWebAPICommon.WebResponses"

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::AddCollectionWebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "AddCollectionWebRequest"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")]],
      ["closedForLunch", ["SOAP::SOAPBoolean", XSD::QName.new(NsDataContracts, "ClosedForLunch")]],
      ["earliestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "EarliestTime")]],
      ["latestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "LatestTime")]],
      ["requestedCollectionDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "RequestedCollectionDate")]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "SpecialInstructions")]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::WebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::UKMAddCollectionWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMAddCollectionWebResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["bookingMessage", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "BookingMessage")], [0, 1]],
      ["collectionJobNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CollectionJobNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Collection::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Collection::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Collection::UKMResultState,
    :schema_type => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::AddCollectionWebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "AddCollectionWebRequest"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")]],
      ["closedForLunch", ["SOAP::SOAPBoolean", XSD::QName.new(NsDataContracts, "ClosedForLunch")]],
      ["earliestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "EarliestTime")]],
      ["latestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "LatestTime")]],
      ["requestedCollectionDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "RequestedCollectionDate")]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "SpecialInstructions")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::WebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMAddCollectionWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMAddCollectionWebResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["bookingMessage", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "BookingMessage")], [0, 1]],
      ["collectionJobNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CollectionJobNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Collection::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Collection::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMResultState,
    :schema_type => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::BookCollection,
    :schema_name => XSD::QName.new(NsServiceContracts, "BookCollection"),
    :schema_element => [
      ["request", "UKMail::SoapService::Collection::AddCollectionWebRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::BookCollectionResponse,
    :schema_name => XSD::QName.new(NsServiceContracts, "BookCollectionResponse"),
    :schema_element => [
      ["bookCollectionResult", ["UKMail::SoapService::Collection::UKMAddCollectionWebResponse", XSD::QName.new(NsServiceContracts, "BookCollectionResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::AddCollectionWebRequest,
    :schema_name => XSD::QName.new(NsDataContracts, "AddCollectionWebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")]],
      ["closedForLunch", ["SOAP::SOAPBoolean", XSD::QName.new(NsDataContracts, "ClosedForLunch")]],
      ["earliestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "EarliestTime")]],
      ["latestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "LatestTime")]],
      ["requestedCollectionDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsDataContracts, "RequestedCollectionDate")]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "SpecialInstructions")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::WebRequest,
    :schema_name => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMAddCollectionWebResponse,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMAddCollectionWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["bookingMessage", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "BookingMessage")], [0, 1]],
      ["collectionJobNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CollectionJobNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebResponse,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Collection::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Collection::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Collection::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebError,
    :schema_name => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Collection::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebError,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::ArrayOfUKMWebWarning,
    :schema_name => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Collection::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMWebWarning,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Collection::UKMResultState,
    :schema_name => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

end

end; end; end
