# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.3)
require 'xsd/qname'

module UKMail; module SoapService; module Collection


# {http://www.UKMail.com/Services/Contracts/DataContracts}WebRequest
#   authenticationToken - SOAP::SOAPString
#   username - SOAP::SOAPString
class WebRequest
  attr_accessor :authenticationToken
  attr_accessor :username

  def initialize(authenticationToken = nil, username = nil)
    @authenticationToken = authenticationToken
    @username = username
  end
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}AddCollectionWebRequest
#   authenticationToken - SOAP::SOAPString
#   username - SOAP::SOAPString
#   accountNumber - SOAP::SOAPString
#   closedForLunch - SOAP::SOAPBoolean
#   earliestTime - SOAP::SOAPDateTime
#   latestTime - SOAP::SOAPDateTime
#   requestedCollectionDate - SOAP::SOAPDateTime
#   specialInstructions - SOAP::SOAPString
class AddCollectionWebRequest < WebRequest
  attr_accessor :authenticationToken
  attr_accessor :username
  attr_accessor :accountNumber
  attr_accessor :closedForLunch
  attr_accessor :earliestTime
  attr_accessor :latestTime
  attr_accessor :requestedCollectionDate
  attr_accessor :specialInstructions

  def initialize(authenticationToken = nil, username = nil, accountNumber = nil, closedForLunch = nil, earliestTime = nil, latestTime = nil, requestedCollectionDate = nil, specialInstructions = nil)
    @authenticationToken = authenticationToken
    @username = username
    @accountNumber = accountNumber
    @closedForLunch = closedForLunch
    @earliestTime = earliestTime
    @latestTime = latestTime
    @requestedCollectionDate = requestedCollectionDate
    @specialInstructions = specialInstructions
  end
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}UKMWebResponse
#   errors - UKMail::SoapService::Collection::ArrayOfUKMWebError
#   result - UKMail::SoapService::Collection::UKMResultState
#   warnings - UKMail::SoapService::Collection::ArrayOfUKMWebWarning
class UKMWebResponse
  attr_accessor :errors
  attr_accessor :result
  attr_accessor :warnings

  def initialize(errors = nil, result = nil, warnings = nil)
    @errors = errors
    @result = result
    @warnings = warnings
  end
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}UKMAddCollectionWebResponse
#   errors - UKMail::SoapService::Collection::ArrayOfUKMWebError
#   result - UKMail::SoapService::Collection::UKMResultState
#   warnings - UKMail::SoapService::Collection::ArrayOfUKMWebWarning
#   bookingMessage - SOAP::SOAPString
#   collectionJobNumber - SOAP::SOAPString
class UKMAddCollectionWebResponse < UKMWebResponse
  attr_accessor :errors
  attr_accessor :result
  attr_accessor :warnings
  attr_accessor :bookingMessage
  attr_accessor :collectionJobNumber

  def initialize(errors = nil, result = nil, warnings = nil, bookingMessage = nil, collectionJobNumber = nil)
    @errors = errors
    @result = result
    @warnings = warnings
    @bookingMessage = bookingMessage
    @collectionJobNumber = collectionJobNumber
  end
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}ArrayOfUKMWebError
class ArrayOfUKMWebError < ::Array
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}UKMWebError
#   code - SOAP::SOAPInt
#   description - SOAP::SOAPString
class UKMWebError
  attr_accessor :code
  attr_accessor :description

  def initialize(code = nil, description = nil)
    @code = code
    @description = description
  end
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}ArrayOfUKMWebWarning
class ArrayOfUKMWebWarning < ::Array
end

# {http://www.UKMail.com/Services/Contracts/DataContracts}UKMWebWarning
#   code - SOAP::SOAPInt
#   description - SOAP::SOAPString
class UKMWebWarning
  attr_accessor :code
  attr_accessor :description

  def initialize(code = nil, description = nil)
    @code = code
    @description = description
  end
end

# {http://schemas.datacontract.org/2004/07/UKMWebAPICommon.WebResponses}UKMResultState
class UKMResultState < ::String
  Failed = new("Failed")
  Successful = new("Successful")
  Unknown = new("Unknown")
end

# {http://www.UKMail.com/Services/Contracts/ServiceContracts}BookCollection
#   request - UKMail::SoapService::Collection::AddCollectionWebRequest
class BookCollection
  attr_accessor :request

  def initialize(request = nil)
    @request = request
  end
end

# {http://www.UKMail.com/Services/Contracts/ServiceContracts}BookCollectionResponse
#   bookCollectionResult - UKMail::SoapService::Collection::UKMAddCollectionWebResponse
class BookCollectionResponse
  attr_accessor :bookCollectionResult

  def initialize(bookCollectionResult = nil)
    @bookCollectionResult = bookCollectionResult
  end
end


end; end; end
