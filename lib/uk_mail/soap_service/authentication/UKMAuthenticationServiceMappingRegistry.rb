# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.3)
require_relative 'UKMAuthenticationService.rb'
require 'soap/mapping'

module UKMail; module SoapService; module Authentication

module UKMAuthenticationServiceMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsDataContracts = "http://www.UKMail.com/Services/Contracts/DataContracts"
  NsServiceContracts = "http://www.UKMail.com/Services/Contracts/ServiceContracts"
  NsUKMWebAPICommonWebResponses = "http://schemas.datacontract.org/2004/07/UKMWebAPICommon.WebResponses"

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::LoginWebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "LoginWebRequest"),
    :schema_element => [
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Password")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLoginResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMLoginResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["accounts", ["UKMail::SoapService::Authentication::ArrayOfAccountWebModel", XSD::QName.new(NsDataContracts, "Accounts")], [0, 1]],
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Authentication::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Authentication::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfAccountWebModel,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfAccountWebModel"),
    :schema_element => [
      ["accountWebModel", ["UKMail::SoapService::Authentication::AccountWebModel[]", XSD::QName.new(NsDataContracts, "AccountWebModel")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountWebModel,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountWebModel"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")], [0, 1]],
      ["accountStatus", ["UKMail::SoapService::Authentication::AccountStatusEnum", XSD::QName.new(NsDataContracts, "AccountStatus")], [0, 1]],
      ["accountType", ["UKMail::SoapService::Authentication::AccountTypeEnum", XSD::QName.new(NsDataContracts, "AccountType")], [0, 1]],
      ["alternativeRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AlternativeRefAlias")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CompanyName")], [0, 1]],
      ["contactNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "ContactNumber")], [0, 1]],
      ["customerRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CustomerRefAlias")], [0, 1]],
      ["postcode", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Postcode")], [0, 1]],
      ["region", ["UKMail::SoapService::Authentication::RegionEnum", XSD::QName.new(NsDataContracts, "Region")], [0, 1]],
      ["tradingAddress", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "TradingAddress")], [0, 1]],
      ["vATNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "VATNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::WebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLogoutResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMLogoutResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountStatusEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountStatusEnum")
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountTypeEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountTypeEnum")
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::RegionEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "RegionEnum")
  )

  EncodedRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMResultState,
    :schema_type => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::LoginWebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "LoginWebRequest"),
    :schema_element => [
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Password")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLoginResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMLoginResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["accounts", ["UKMail::SoapService::Authentication::ArrayOfAccountWebModel", XSD::QName.new(NsDataContracts, "Accounts")], [0, 1]],
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Authentication::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebError,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Authentication::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebWarning,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfAccountWebModel,
    :schema_type => XSD::QName.new(NsDataContracts, "ArrayOfAccountWebModel"),
    :schema_element => [
      ["accountWebModel", ["UKMail::SoapService::Authentication::AccountWebModel[]", XSD::QName.new(NsDataContracts, "AccountWebModel")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountWebModel,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountWebModel"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")], [0, 1]],
      ["accountStatus", ["UKMail::SoapService::Authentication::AccountStatusEnum", XSD::QName.new(NsDataContracts, "AccountStatus")], [0, 1]],
      ["accountType", ["UKMail::SoapService::Authentication::AccountTypeEnum", XSD::QName.new(NsDataContracts, "AccountType")], [0, 1]],
      ["alternativeRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AlternativeRefAlias")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CompanyName")], [0, 1]],
      ["contactNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "ContactNumber")], [0, 1]],
      ["customerRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CustomerRefAlias")], [0, 1]],
      ["postcode", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Postcode")], [0, 1]],
      ["region", ["UKMail::SoapService::Authentication::RegionEnum", XSD::QName.new(NsDataContracts, "Region")], [0, 1]],
      ["tradingAddress", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "TradingAddress")], [0, 1]],
      ["vATNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "VATNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::WebRequest,
    :schema_type => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLogoutResponse,
    :schema_type => XSD::QName.new(NsDataContracts, "UKMLogoutResponse"),
    :schema_basetype => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountStatusEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountStatusEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountTypeEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "AccountTypeEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::RegionEnum,
    :schema_type => XSD::QName.new(NsDataContracts, "RegionEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMResultState,
    :schema_type => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::Login,
    :schema_name => XSD::QName.new(NsServiceContracts, "Login"),
    :schema_element => [
      ["loginWebRequest", "UKMail::SoapService::Authentication::LoginWebRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::LoginResponse,
    :schema_name => XSD::QName.new(NsServiceContracts, "LoginResponse"),
    :schema_element => [
      ["loginResult", ["UKMail::SoapService::Authentication::UKMLoginResponse", XSD::QName.new(NsServiceContracts, "LoginResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::Logout,
    :schema_name => XSD::QName.new(NsServiceContracts, "Logout"),
    :schema_element => [
      ["webRequest", "UKMail::SoapService::Authentication::WebRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::LogoutResponse,
    :schema_name => XSD::QName.new(NsServiceContracts, "LogoutResponse"),
    :schema_element => [
      ["logoutResult", ["UKMail::SoapService::Authentication::UKMLogoutResponse", XSD::QName.new(NsServiceContracts, "LogoutResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::LoginWebRequest,
    :schema_name => XSD::QName.new(NsDataContracts, "LoginWebRequest"),
    :schema_element => [
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Password")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLoginResponse,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMLoginResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]],
      ["accounts", ["UKMail::SoapService::Authentication::ArrayOfAccountWebModel", XSD::QName.new(NsDataContracts, "Accounts")], [0, 1]],
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebResponse,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebError,
    :schema_name => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebError"),
    :schema_element => [
      ["uKMWebError", ["UKMail::SoapService::Authentication::UKMWebError[]", XSD::QName.new(NsDataContracts, "UKMWebError")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebError,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebError"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfUKMWebWarning,
    :schema_name => XSD::QName.new(NsDataContracts, "ArrayOfUKMWebWarning"),
    :schema_element => [
      ["uKMWebWarning", ["UKMail::SoapService::Authentication::UKMWebWarning[]", XSD::QName.new(NsDataContracts, "UKMWebWarning")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMWebWarning,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMWebWarning"),
    :schema_element => [
      ["code", ["SOAP::SOAPInt", XSD::QName.new(NsDataContracts, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::ArrayOfAccountWebModel,
    :schema_name => XSD::QName.new(NsDataContracts, "ArrayOfAccountWebModel"),
    :schema_element => [
      ["accountWebModel", ["UKMail::SoapService::Authentication::AccountWebModel[]", XSD::QName.new(NsDataContracts, "AccountWebModel")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountWebModel,
    :schema_name => XSD::QName.new(NsDataContracts, "AccountWebModel"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AccountNumber")], [0, 1]],
      ["accountStatus", ["UKMail::SoapService::Authentication::AccountStatusEnum", XSD::QName.new(NsDataContracts, "AccountStatus")], [0, 1]],
      ["accountType", ["UKMail::SoapService::Authentication::AccountTypeEnum", XSD::QName.new(NsDataContracts, "AccountType")], [0, 1]],
      ["alternativeRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AlternativeRefAlias")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CompanyName")], [0, 1]],
      ["contactNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "ContactNumber")], [0, 1]],
      ["customerRefAlias", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "CustomerRefAlias")], [0, 1]],
      ["postcode", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Postcode")], [0, 1]],
      ["region", ["UKMail::SoapService::Authentication::RegionEnum", XSD::QName.new(NsDataContracts, "Region")], [0, 1]],
      ["tradingAddress", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "TradingAddress")], [0, 1]],
      ["vATNumber", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "VATNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountStatusEnum,
    :schema_name => XSD::QName.new(NsDataContracts, "AccountStatusEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::AccountTypeEnum,
    :schema_name => XSD::QName.new(NsDataContracts, "AccountTypeEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::RegionEnum,
    :schema_name => XSD::QName.new(NsDataContracts, "RegionEnum")
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::WebRequest,
    :schema_name => XSD::QName.new(NsDataContracts, "WebRequest"),
    :schema_element => [
      ["authenticationToken", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "AuthenticationToken")]],
      ["username", ["SOAP::SOAPString", XSD::QName.new(NsDataContracts, "Username")]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMLogoutResponse,
    :schema_name => XSD::QName.new(NsDataContracts, "UKMLogoutResponse"),
    :schema_element => [
      ["errors", ["UKMail::SoapService::Authentication::ArrayOfUKMWebError", XSD::QName.new(NsDataContracts, "Errors")], [0, 1]],
      ["result", ["UKMail::SoapService::Authentication::UKMResultState", XSD::QName.new(NsDataContracts, "Result")]],
      ["warnings", ["UKMail::SoapService::Authentication::ArrayOfUKMWebWarning", XSD::QName.new(NsDataContracts, "Warnings")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UKMail::SoapService::Authentication::UKMResultState,
    :schema_name => XSD::QName.new(NsUKMWebAPICommonWebResponses, "UKMResultState")
  )

end

end; end; end
